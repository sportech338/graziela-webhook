from typing import Optional, Tuple

# ObjeÃ§Ãµes diretas e explÃ­citas
OBJECOES_ATIVAS = {
    "PreÃ§o": [
        "tÃ¡ caro", "muito caro", "nÃ£o tenho dinheiro", "sem grana", "nÃ£o posso pagar"
    ],
    "ConfianÃ§a": [
        "nunca ouvi falar", "Ã© seguro?", "isso Ã© confiÃ¡vel", "parece golpe"
    ],
    "EficÃ¡cia": [
        "isso funciona mesmo", "tem prova?", "funciona de verdade", "tem garantia que resolve?"
    ],
    "Entrega": [
        "demora pra chegar", "moro longe", "entrega demora", "e o frete?"
    ],
    "Garantia": [
        "posso devolver", "tem garantia", "e se eu nÃ£o gostar?"
    ],
    "ComposiÃ§Ã£o": [
        "o que tem nele", "composiÃ§Ã£o", "contra indicaÃ§Ã£o", "tem glÃºten?"
    ],
    "Forma de pagamento": [
        "nÃ£o uso pix", "sÃ³ tenho boleto", "nÃ£o tenho cartÃ£o", "parcelar?"
    ],
    "FamÃ­lia": [
        "vou falar com meu marido", "minha mÃ£e nÃ£o deixa", "vou ver com meu pai"
    ],
    "Gravidez": [
        "estou grÃ¡vida", "posso usar grÃ¡vida", "grÃ¡vida pode usar?"
    ]
}

# Evasivas comuns que sugerem hesitaÃ§Ã£o
EVASIVAS = {
    "Evasiva: Vou pensar": [
        "vou pensar", "te aviso depois", "vou decidir", "depois eu vejo"
    ],
    "Evasiva: Preciso consultar alguÃ©m": [
        "vou ver com minha esposa", "vou falar com meu mÃ©dico", "preciso conversar com alguÃ©m"
    ],
    "Evasiva: Esperar salÃ¡rio": [
        "recebo semana que vem", "esperar meu pagamento", "salÃ¡rio cai dia"
    ],
    "Evasiva: Testar primeiro": [
        "posso comprar sÃ³ um", "testar primeiro", "ver se funciona primeiro"
    ],
    "Evasiva: DesconfianÃ§a": [
        "tem muita coisa falsa", "nÃ£o confio muito", "parece bom demais"
    ],
    "Evasiva: SilÃªncio": [
        "..."  # ausÃªncia de resposta direta
    ]
}


def identificar_objecao(mensagem: str) -> Tuple[Optional[str], Optional[str]]:
    texto = mensagem.lower()

    for tipo, padroes in OBJECOES_ATIVAS.items():
        for padrao in padroes:
            if padrao in texto:
                return tipo, f"ðŸš« ObjeÃ§Ã£o direta identificada: \"{padrao}\""

    for tipo, padroes in EVASIVAS.items():
        for padrao in padroes:
            if padrao in texto:
                return tipo, f"ðŸŒ€ Evasiva detectada: \"{padrao}\""

    return None, None
